        # MySQL DataSource Configuration
        spring.datasource.url=jdbc:mysql://localhost:3306/bookstore_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
        spring.datasource.username=root
        spring.datasource.password=Zy050811
        spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

        # JPA/Hibernate Configuration
        spring.jpa.hibernate.ddl-auto=update
        spring.jpa.show-sql=true
        # 因为您的 MySQL 版本是 8.0.41，使用 MySQL8Dialect 通常是正确的
        spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
        # 如果MySQLDialect 在某些情况下有问题，或者您更倾向于精确指定，也可以用 org.hibernate.dialect.MySQL8Dialect

        # Server Port (可选, 默认8080)
        # server.port=8080

        # JWT Configuration
        # WARNING: Change this secret in a production environment!
        # Generate a strong secret, e.g., using a secure random generator (at least 256 bits/32 UTF-8 chars for HS256, 512 bits/64 UTF-8 chars for HS512)
        bookstore.app.jwtSecret=YourSuperSecretKeyForDevelopmentWhichIsLongAndSecureEnoughForHS512
        bookstore.app.jwtExpirationMs=86400000

        # Custom application properties
        file.upload-dir=./uploads/avatars
        logging.level.root=INFO
        logging.level.com.bookstore.online_bookstore_backend=DEBUG

        # Kafka Configuration
        spring.kafka.bootstrap-servers=localhost:9092
        spring.kafka.consumer.group-id=bookstore-order-group
        spring.kafka.consumer.auto-offset-reset=earliest
        spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
        spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
        spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
        spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer